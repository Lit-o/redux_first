const initialState = {value: 0};

// reducer обязан всегда быть чистой функцией, не вызывает внутри 
// никаких сайд-эффектов, рандомных данных, нет работы с DOM, сетевых запросов, 
// данных, которые могут быть изменены и не под нашим контролем
// в данный момент. Нельзя менять файлы в файловой системе (Node.js) 

// сколько бы мы не вызвали чистую с одинаковыми 
// аргументами, получим один и тот же результат и функция
// зависит ТОЛЬКО от этих входящих аргументов,
// сама ничего не меняет, а возвращает новый объект

// На вход принимает два объекта state и action, state - 
// описание текущего состояния приложения, action - объект с
// указаниями как менять состояние. Сам редюсер содержит правила
// и меняет состояние в соответствии с пришедшим action
// На выходе выдает новое состояние (иммутабельность)

// Чистые функции желательно делать те, через которые проходит 
// много операций. Если это позволяет код.

const reducer = (state = initialState, action) => {
    switch (action.type) {
        case "INC":
            return {
                ...state,
                value: state.value + 1
            };
        case "DEC":
            return {
                ...state,
                value: state.value - 1
            };
        case "RND":
            return {
                ...state,
                value: state.value * action.payload
            }
        default:
            return state
    }
}

export default reducer;